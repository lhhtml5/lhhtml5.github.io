<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>主页 Blog</title>
        <link>https://lhhtml5.github.io/blog</link>
        <description>主页 Blog</description>
        <lastBuildDate>Tue, 04 Apr 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh</language>
        <item>
            <link>https://lhhtml5.github.io/blog/April4</link>
            <guid>April4</guid>
            <pubDate>Tue, 04 Apr 2023 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //设计一个任务队列，要求分别在1，3，4秒后打印出“1”，“2”，“3”</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    class Queue{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        constructor(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.queue = [];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.time = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        addTask(task,t){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.time += t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.queue.push([task,this.time])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        start(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.queue.forEach(item=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                setTimeout(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    item[0]()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },item[1])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //随机生成一个颜色</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const getRandomColor = () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const value = () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return parseInt(Math.random() * 255)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return `rgb(${value()},${value()},${value()})`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //Js实现一个发布订阅模式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    class Center {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        eventMap = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        on(event,fun){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.#add(event,fn,'on')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        once(event,fun){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.#add(event,fun,'once')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        #add(event,fun,type){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(typeof fun !== 'function')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new TypeError(`$(fun) is not a function`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(!event) throw new Error(`need type`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(!this.eventMap[event]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.eventMap[event] = [];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.eventMap[event].push({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                event:fun,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:type,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        emit(event, ...args){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(this.eventMap[event]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.eventMap[event] = this.eventMap[event].filter((curr)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    curr.data(...args)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return curr.type != 'once'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        remove(event,fun){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(this.eventMap[event]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.eventMap[event] = this.eventMap[event].filter((curr)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return curr.event !== fun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //将数字12345678转化成RMB形式：12，345，678</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function RMB(str){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let arr = str.split("").reverse();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let res = [];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(let i=0;i&lt;arr.length;i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            res.push(arr[i]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if((i + 1) % 3 === 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                res.push(",")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return res.reverse().join("");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console.log(RMB("12345678"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //数组转tree</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const getChildren = (data,result,pid) =&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(const item of data){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(item.pid === pid){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                const newItem= {...item.children:[]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                result.push(newItem)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                getChildren(data,result,item.id)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const arrayToTree = (data,pid)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const result = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        getChildren(data,pid,result)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //实现instanceof</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        1.leftValue代表实例对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        2.rightValue代表构造函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        3.利用typeof方法，判读输入的leftValue是否为对象，如果不是，则返回false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        4.遍历leftValue的原型链，直到找到rightValue的prototype,如果查找失败的话返回false,反之，返回true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function my_instanceof(leftValue,rightValue){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(typeof leftValue !== 'object' || leftValue === null) return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let rightProto = rightValue.prototype,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            leftProto = leftValue.__proto__;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            while(true){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(leftProto === null){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(leftProto === rightProto){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                leftProto = leftProto.__proto__</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //call方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Function.prototype.myCall = function(context){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //判断是否是function 类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(typeof context !== 'function'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throw new Error('只有function才可以调用call方法')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //处理默认上下文对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        context = context || window</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 处理参数，截取除第一个参数外的所有参数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const argu = [...argument].slice(1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //处理调用方法的this指向</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        context.fn = this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //获取结果</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const result = context.fn(...argu)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //删除添加方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        delete context.fn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //返回结果</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //实现一个函数，判断一个字符串是否是回文字符串</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function isPalindrome(str){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const arr = str.split('')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const reversed = arr.reverse().join('')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return str === reversed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //深拷贝</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    deepClone(obj){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const objClone = Array.isArray(obj) ? [] : {};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(obj &amp;&amp; typeof obj === 'object'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for(let key in obj){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(obj.hasOwnProperty(key)){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(obj[key] &amp;&amp; typeof obj[key] === 'object'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        objClone[key] = this.deepClone(obj[key])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        objClone[key] = obj[key]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return objClone</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //数组最大差值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let arr = [ 23,4,5,30,4,5,7,7,79,-4]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const Dvalue = (arr) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let min = arr[0],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        max = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        arr.forEach((value)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(value &lt; min) min = value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(value &gt; max) max = value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return max - min</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //实现斐波那契数列</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function fibonacci(n){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(n &lt;= 1){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return fibonacci(n - 1) + fibonacci(n - 2)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //js如何实现插入排序</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function insertionSort(arr){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var len = arr.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var preIndex,current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(var i = 1;i&lt;len;i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            preIndex = i - 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            current = arr[i];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            while(preIndex &gt;= 0 &amp;&amp; arr[preIndex] &gt; current){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                arr[preIndex + 1] = arr[preIndex]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            arr[preIndex + 1] = current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return arr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //实现一个new</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function objectFactory(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //创建一个新对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let obj = new Object()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //将构造函数的作用域赋给新对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let Constructor = [].shift.call(arguments)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        obj.__proto__ = Constructor.prototype</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //执行构造函数中的代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var ret = Constructor.apply(obj,arguments)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //返回新对象</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return typeof ret === 'object'?ret:obj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>code</category>
            <category>Life is meaningless without a purpose</category>
        </item>
        <item>
            <title><![CDATA[doexercise/asterozero]]></title>
            <link>https://lhhtml5.github.io/blog/AstroZero</link>
            <guid>AstroZero</guid>
            <pubDate>Wed, 22 Mar 2023 07:05:34 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//AstroZero 平台的脚本引擎采用 TypeScript 语言；脚本执行时，TypeScript 语言会被翻译成 JavaScript 语言，由 JavaScript 引擎执行。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Here's your code.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//导入该脚本所依赖的标准库文件，decimal和context是系统预置的标准库。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import * as db from 'db';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import * as context from 'context';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// import * as case1 from './luhan__case1'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// import * as case2 from './luhan__case2'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@useObject(['tangmh__FaultList__CST'])  //取表缺陷管理</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@useObject(['tangmh__Alarmethod__CST']) // 取告警算法表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@useObject(['tangmh__AlarmInfo__CST']) //告警通知信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@action.object({ type: 'param' })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export class Input { }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@action.object({ type: 'param' })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export class Output {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @action.param({ type: 'any', isCollection: true, label: "object" })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resource: object[];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@action.object({ type: 'method' })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export class getFileList {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @action.method({ input: "Input", output: "Output", label: "getFileList" })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    getFileList(input: Input): Output {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let outResult = new Output()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let error = new Error();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let alarmethodList = db.object('tangmh__Alarmethod__CST');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let s = db.object('tangmh__FaultList__CST');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let alarminfo = db.object('tangmh__AlarmInfo__CST');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //查询字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let option = {};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //查询条件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let condition = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //调用查询条件接口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let falutList = s.queryByCondition(condition as any, option) //缺陷管理</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let alerList = alarmethodList.queryByCondition(condition, condition) //告警算法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for (let item of falutList) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                let falutName = item.tangmh__relaEP__CST</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                let finObjet = alerList.find((item: any, index: number) =&gt; item.tangmh__EPTYPE__CST == falutName)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if (finObjet) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    item.tangmh__AlarmFinish__CST = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // let updateFlag = [falutList[0]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // s.batchUpdate(updateFlag);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // case1.getcase()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    s.update(item.id, item);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    let info = { "tangmh__alarmName__CST": finObjet.tangmh__ALARMMETHOD__CST, "tangmh__alarmCont__CST": item.tangmh__Fdesc__CST, "tangmh__Field1__CST": item.tangmh__relaEP__CST, "tangmh__alarmTime__CST": new Date() }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    alarminfo.insert(info)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                //     error.name = "出错";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                //     error.message = "未找到告警算法";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                //     throw error;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return outResult;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } catch (error) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            console.log(error.name, error.message);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            context.setError(error.name, error.message);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>AstroZero</category>
            <category>华为云平台</category>
        </item>
        <item>
            <link>https://lhhtml5.github.io/blog/February28</link>
            <guid>February28</guid>
            <pubDate>Tue, 28 Feb 2023 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">计算机中,信息的最小单位是位</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">安装windows微型计算机，其内存容量不能超过4MB</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">汇编语言是一种依赖于计算机的低级程序设计语言</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">一般将电子计算机的发展历程划分为四个时代，其划分的主要依据是计算机的构成元件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">格式的文件可以使用WinRAR进行解压缩为zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">计算机病毒最主要的特征是传染性和破坏性</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在word 2010中，“标尺”命令位于垂直滚动条</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">第一代计算机体积大、耗电多、性能低，其主要原因是受制于元器件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在计算机领域中信息是一种连续变化的模拟量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在Wor的编辑状态，可以显示页面四角的视图方式页面视图方式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在Exel2010主界面窗口中不包含输出选项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">在Word中，用快捷键退出Word的最快方法是Alt+F4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">计算机上安装拨号网络的目的是为了能够以拨号的方式进入Internet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">世界上第一台电子数字计算机诞生于1946年</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">第二代电子计算机采用晶体管作为主要的电子元器件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">微型计算机的微处理器芯片上集成了控制器和运算器</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">通常所说的“裸机”是指计算机仅有硬件系统</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">个人计算机（P）必备的外部设备是显示器和键盘</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">第三代计算机的运算速度大约是每秒100万次</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    My Most Favorite TV Program</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    The News Report has always been my favorite TV program.Almost everyday I turn on the TV at 6:30p.m.and await for the news program.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    This has become a part of my life.Because of this fast pace,news programs can contain much information in a short time.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    Life is meaningless without a purpose. //没有目标的生活是毫无意义的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Many students who have problems won't go for advice or help. //许多有问题的学生不去寻找建议或帮助</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Open the window and let the fresh air in. //打开窗户让新鲜空气进来</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    The couple enjoyed their holiday very much. //这对夫妻假期过的很愉快</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Fires may do more damage than the earthquakes. //火灾可能比地震造成更大的破坏</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Mr.Lin assigned too much homework today. //今天林老师留了很多作业</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    You should look around before you cross the street. //过马路前，你应该四处看看</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Do you think you can do it by yourself? //你认为你自己能做这件事吗？</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    All that glitters is not gold. //不是所有的金子都会发光</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    I knocked on his door but nobody came to answer it. //我敲了他的门，但没人来开门</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Talking for a long time makes me tired. //长时间的交谈让我很疲惫</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    The students are encouraged by their teacher to do more listening,reading and writing. //老师鼓励学生多听，多读，多写</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    This is the worst hospital i have ever seen. //这是我见过最差的医院</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    What did they say they had done? //他们说他们干了什么</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Not all Americans are interested in sports,of course. //当然，不是所有的美国人都对体育感兴趣</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    How long will it take us to get there？ //我们多久能到那儿？</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    This pair of shoes cost me 260 Yuan. //这双鞋花了我260元</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    We must take some measures to control the pollution. //我们必须采取措施来控制污染</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    He has been learning English for years. // 多年来他一直在学习英语</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    We all like her because she's very helpful. // 我们都喜欢他因为他非常乐于助人</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    I slept soundly all night. //我整夜睡的很熟</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    For example,they use both sides of a piece of paper instead of just one. //例如，他们双面使用纸而不是单面使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    I think our dream will become true. //我认为我们的梦想将成为现实</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Air is all around us. //空气围绕在我们周围</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    He has been learning English for years. // 多年来，他一直在学英语。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    Vue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Vue使用了基于HTML的模板语法,允许开发者声明式的将DOM绑定至底层Vue实例的数据。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Vue的核心是一个允许你采用简洁的模板语法来声明式的将数据渲染进DOM的系统。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    结合响应式系统，在应用状态改变时，  Vue能够智能地计算出重新渲染组件的最小代价并应用到DOM操作上。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    数据绑定最常见的形式就是使用{{...}}(双大括号)的文本差值。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    组件(Component)是Vue.js最强大的功能之一。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    组件可以扩展HTML元素，封装可以重用的代码。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>笔记</category>
            <category>Life is meaningless without a purpose</category>
        </item>
        <item>
            <title><![CDATA[review]]></title>
            <link>https://lhhtml5.github.io/blog/review</link>
            <guid>review</guid>
            <pubDate>Tue, 21 Feb 2023 08:26:14 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> js数据类型：string,number,boolean,undefined,null,symbol,bigint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             object:Array Function Date Math</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">数据类型判断 typeof   null 不能判断</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             instanceof 可以判断复杂类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             Object.prototype.toString.call()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> */</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    import { defineComponent,onBeforeMount,ref,watch,reactive,getCurrentInstance} from 'vue'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    import {QuestionFilled,Setting}from '@element-plus/icons-vue'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    export default defineComponent({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name:'Afrom',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        props:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            inline:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Boolean,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            size:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:','</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            jobject:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Object,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                required:true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return {value:[]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            defValue:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Object,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                required:true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return {value:[]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            labelWidth:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:'125px'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isLabelWidth:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Boolean,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            itemWidth:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }，</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            disable:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Array,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isShow:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Array,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            hasCheckParam:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Boolean,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            selectParam:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Array,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isShowNote:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Boolean,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            isDisabledAll:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Boolean,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        emits:['inputChange','focus','buttonClick','selectSetting'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        setup(props,{emit,attrs}){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const uSet = props</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const localJobject = reactive(uSet.jobject)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let jvalue:any = reactive({})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const jrules:any = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const jkey = ref(0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            watch(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                uSet.jobject,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    jkey.value++</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    initCR()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                { deep:true }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const restJRules = ():void=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                for(let i=0;i&lt;localJobject.value.length;i += 1){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    const element:any = localJobject.value[i]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(element.type == 'checkbox'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jvalue[element.prop] = reactive([])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(element.rules &amp;&amp; !(uSet.isShow &amp;&amp; uSet.isShow.includes(element.prop))){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jrules[element.prop] = element.rules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jrules[element.prop] = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const initCR = () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(uSet.defValue){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    jvalue = uSet.defValue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                resetJRules()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                for(let i=0;i&lt;localJobjevt.value.length; i += 1){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    const element:any = localJobject.value[i]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(element.type == 'checkbox' &amp;&amp; uSet.defValue[element.prop as string].length == 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jvalue[element.prop]=ref([])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(element.rules &amp;&amp; !(uSet.isShow &amp;&amp; uSet.isShow.includes(element.prop))){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        jrules[element.prop]= element.rules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            onBeforeMount(initCR)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const handleChange = (ftype:string,index:number,data:any,type:string) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                emit('inputChange',index,data,type,ftype)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const focusMethod = (ftype:string,index:number,data:any,type:string) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                emit('focus',index,data,type,ftype)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const selectParams = reactive({list:uSet.selectParm as string[]})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const instance = getCurrentInstance()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(instance){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Object.assign(instance.proxy,{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    async getValue():Promise&lt;any&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        const t:any = this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        const rValue = await t.$refs.aform.validate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if(rValue){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return uSet.hasCheckParam?{value:jvalue,checkList:selectParams.list}:jvalue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        return null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const selectSetting = (prop:string)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                emit('selectSetting',prop)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const changeCheckboxGroup = (list:any)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                selectParams.list = list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;el-form inline={uSet.inline} size={uSet.size} label-width={uSet.isLabelWidth?uSet.labelWidth:''}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    model={jvalue}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    rules={jrules}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    ref="aform"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    key={jkey}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        localJobject.value.map(($val:any,$index:number)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;el-form-item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    label={$val.label}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    prop={$val.prop}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    key={$index}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    class="aform"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    v-show={!(uSet.isShow &amp;&amp; uSet.isShow.includes($val.prop))}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    v-slots={</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        uSet.hasCheckParam?{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            label:()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &amp;nbsp;&amp;nbsp;&lt;span&gt;{$val.label}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;el-checkbox-group&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;el-checkbox label={$val.prop}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    class="checkbox-span"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &gt;&lt;/el-checkbox&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;/el-checkbox-group&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        } : {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                {(():any=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    if($val.type == 'number'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            &lt;&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                &lt;el-input-number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 style={{width:$val.width ? $val.width : uSet.itemWidth}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 v-model={jvalue[$val.prop]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 min={$val.min}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 placeholder={$val.placeholder?$val.placeholder?$val.placeholder:`请输入${$val.label}`}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 disabled={uSet.isDisabledAll || ($val.disable &amp;&amp; uSet.disable.includes($val.disable))}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 onChange={()=&gt;handleChange($val.type,$index,jvalue[$val.prop],$val.prop)}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                 controls-position="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                &gt;&lt;/el-input-number&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                &lt;span style="margin-left:10px"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;el-tooltip content="0s为不采样，不补数" placement="top"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                        &lt;el-icon&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                        &lt;/el-icon&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                    &lt;/el-tooltip&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                &lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            &lt;/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    if(!$val.type || $val.type == 'text'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            &lt;el-input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            style={{width:$val.width ? $val.width:uSet.itemWidth}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            v-model={jvalue[$val.prop]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            placeholder={</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                $val.placeholder?$val.placeholder:`请输入${$val.label}`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            disabled={uSet.isDisabledAll || ($val.disable &amp;&amp; uSet.disable.includes($val.disable))}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            onChange={()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                handleChange($val.type,$index,jvalue[$val.prop],$val.prop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            }}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            onFocus={()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                $val.focusM?focusMethod($val.type,$index.jvalue[$val.prop],$val.prop):''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            }}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            maxlength={$val.maxlength?$val.maxlength:null}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            auto-complete="off"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            show-word-limit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                            &lt;/el-input&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    if($val.type == 'password'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                        return (&lt;el-input&gt;&lt;/el-input&gt;)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                })()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;/el-from-item&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/el-form&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        data(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return {jvalue:{}}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>go over</category>
            <category>219046</category>
        </item>
        <item>
            <title><![CDATA[See]]></title>
            <link>https://lhhtml5.github.io/blog/see</link>
            <guid>see</guid>
            <pubDate>Wed, 15 Feb 2023 01:18:36 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//导出</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">handleExport(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if(this.dataTable.data.length == 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return this.$message({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            message:'暂无导出数据!'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type:'warning'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.$http.post(xxxx,data).then((res)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const resData = res.data.item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(resData == null || resData == undefined || resData == ''){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            alert(error)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let id = res.data.item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let type = 'xls'  //这里可以改成xlsx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let fileName = 'xxxxxxx'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //COMMON_API_PATH+'/commonc/excelDownload/'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        window.open(xxx+'xxxxx'+id+'/'+type+'/'+fileName)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //uploadFile 可以解析xls文件然后判断</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    uploadFile(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const reader = new FileReader()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        reader.readAsArrayBuffer(files) //获取到文件进行解析</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        reader.onload = function (){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const buffer = reader.result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const bytes = new Uint8Array(buffer)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const length = bytes.byteLength</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let binary = '';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for(let i = 0; i &lt; length; i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                binary += String.fromCharCode(bytes[i])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const XLSX = require('xlsx')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const wb = XLSX.read(binary,{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:'binary'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           this.outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let messageSession = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                isExists:false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                message:''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const arr = [...this.outdata]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(!arr.length)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return this.$message.error('上传文件无数据，请确认文件数据后上传')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for(let [index,item] of arr.entries()){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(!item.hasOwnProperty('姓名')){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    messageSession.isExists = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    messageSession.message = `您上传文件第${index+2}行姓名不存在，请修改后上传`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (messageSession.isExists){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.$message.error(messageSession.message)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //文件流下载</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const downloadFile = function(path,name){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const xhr = new XMLHttpRequest()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        xhr.open('get',path)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        xhr.responseType = 'blob'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        xhr.send()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        xhr.onload = function(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(this.status === 200 || this.status === 304){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if('msSaveOrOpenBlob' in navigator){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    navigator.msSaveOrOpenBlob(this.response,name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                const url = URL.createObjectURL(this.response)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                const a = document.createElement('a')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                a.style.display = 'none'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                a.href = url;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                a.download = name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                document.body.appendChild(a)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                a.click()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                document.body.removeChild(a)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                URL.revokeObjectURL(url)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//驳回出输入框</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 驳回</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rejectBtn(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let list = this.xxxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.$prompt('请输入驳回意见','提示',{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    confirmButtonText:'确定',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cancelButtonText:'取消',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputPattern:/^[\s\S]*.*[^\s][\s\S]*$/,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputErrorMessage:'驳回意见不能为空',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputPlaceholder:"最大输入100个字符",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputValidator:this.checkReject,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputType:'textarea'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }).then(({value})=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    list[0].xxx = value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.sureReject(list[0]) //驳回方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }).catch(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.$message({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        type:'info',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        message:'取消输入'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.$refs.multipleTable.clearSelection()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//预览 后端url并返回id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pdfPreview(row){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.$http.get(xxxx,{responseType:'blob'}).then((res)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const pdfFile = window.URL.createObjectURL(new Blob([res.data],{type:'application/pdf'}))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        window.open(pdfFile + '#toolbar = 0')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        URL.revokeObjectURL(pdfFile)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exportPreview(row){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if(!row.id) return this.$message.warning('请上传文件后保存')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if(row.fileName.includes('.png') || row.fileName.includes('.jpg')){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const imgWindow = window.open("")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        imgWindow &amp;&amp; imgWindow.document.write(`&lt;image src='${XXXXX}+row.id' style='display:flex;margin:0 auto' /&gt;`)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } else if(row.fileName.includes('.pdf')){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.$http.get(xxxx+row.id,{responseType:'blob'}).then((res)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const pdfFile = window.URL.createObjectURL(new Blob([res.ata],{type:'application/pdf;base64'}))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            window.open(pdfFile+'#toolbar=0')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            URL.revokeObjectURL(pdfFile)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.$message.waring('暂无法预览')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">form表单上传默认上传在network中显示type为document类型无法找到返回值，需要改成formData来传可以接收到后端返回的数据</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>笔记</category>
            <category>随笔</category>
        </item>
        <item>
            <title><![CDATA[code]]></title>
            <link>https://lhhtml5.github.io/blog/2023/02/13/code</link>
            <guid>/2023/02/13/code</guid>
            <pubDate>Mon, 13 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[网页概述]]></description>
            <content:encoded><![CDATA[<p>网页概述
万维网创始人 蒂姆伯纳斯李</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //leetCode输出有效括号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let generateParenthesis = function(n){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const list = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        backtracking(n,lits,0,0,"")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function backtracking(n,result,left,right,str){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //右边括号数量大于左边，表示无效括号组合</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(right &gt; left) return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //左右两边括号数量相等</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(left == n &amp;&amp; right == n){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            result.push(str)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //左边少了，则左边加1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(left &lt; n){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            backtracking(n,result,left+1,right,str+"(")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //右边少了，则右边加1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(right&lt; left){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            backtracking(n,result,left,right+1,str+")")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //LeetCode四数之和</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 给你一个由n个整数组成的数组nums,和一个目标值target。请你找出并返回满足下述全部条件且不重复的四元组[nums[a],nums[b],nums[c],nums[d]](若两个元祖元素一一对应，则认为两个四元组重复)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 0&lt;= a,b,c,d &lt; n  a、b、c和d互不相同 nums[a] + nums[b] + nums[c] + nums[d] == target  可以按任意顺序返回答案</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 示例1 输入 nums = [1,0,-1,0,-2,2] target = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //       输出 [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let fourSum = function(nums,target){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const len = nums.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(len &lt; 4) return []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.sort((a,b) =&gt; a- b)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const res = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(let i = 0;i&lt;len - 3;i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //去重i</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(i &gt; 0 &amp;&amp; nums[i] === nums[i - 1]) continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for(let j = i + 1; j &lt; len -2; j++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                //去重j</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(j &gt; i + 1 &amp;&amp; nums[j] === nums[j -1]) continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                let l = j + 1 ,r = len - 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                while(l &lt; r){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    const sum = nums[i] + nums[j] + nums[l] + nums[r]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(sum &lt; target){l++; continue}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(sum &gt; target) {r--; continue}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    res.push([nums[i],nums[j],nums[l],nums[r]])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    while(l &lt; r &amp;&amp; nums[l] === nums[++l])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    while(l &lt; r &amp;&amp; nums[r] === nums[--r])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return res</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function fourSum(nums:number[],target:number):number[][]{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nums.sort((a,b)=&gt;a-b)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let first: number = 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            second: number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            third: number,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fourth: number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let length: number = nums.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let resArr: number[][]=[]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(first;first&lt; length;first++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(fist &gt; 0 &amp;&amp; nums[first] === nums[first - 1]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for(second = first + 1;second &lt; length; second++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if((second - first) &gt; 1 &amp;&amp; nums[second] === nums[second -1]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                third = second + 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fourth = length - 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                while(third &lt; fourth){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    let total:number = nums[first] + nums[second] + nums[third] + nums[fourth]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(total === target){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        resArr.push([nums[first],nums[second],nums[third],nums[fourth]])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        third++;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        fourth--;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        while(nums[third] === nums[third - 1]) third++</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        while(nums[fourth] === nums[fourth + 1]) fourth --</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    } else if(total &lt; target){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        third++</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    } else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        fourth--</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return resArr;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//vue-router重写</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const originPush = VueRouter.prototype.push</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const originReplace = VueRouter.prototype.replace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VueRouter.prototype.push = function(location,resolve,reject)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if(resolve === undefined &amp;&amp; reject === undefined){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return originPush.call(this,location).catch(()=&gt;{})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return originPush.call(this,location,resolve,reject)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VueRouter.prototype.replace = function(location,onComplete=()=&gt;{},onAbort=()=&gt;{}){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return originReplace.call(this,location).then(onComplete).catch(onAbort)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">可见框 + 边框  + 边距 = 包含块的宽度</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">如果垂直方向存在一个等式？</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//@lc code = start [739]每日温度</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">var dailyTemperatures = function (temperatures){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const stack = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const res = new Array(temperatures.length).fill(0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for(let i=0;i&lt;temperatures.length;i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while(stack.length &gt; 0 &amp;&amp; temperatures[i]&gt;temperatures[stack[stack.length -1]]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            res[stark[stark.length - 1]] = i - stack[stack.length - 1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            stack.pop()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stack.push(i)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return res</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const temperatures = [73,74,75,71,69,72,76,73]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console.log(dailyTemperatures(temperatures))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//实际开发中设计图都是像素为单位px 将设计图转换成页面是单位是vw 750px = 100vw  1px = 100/750vw  html font-size:0.13vw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//两小数相加</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">addNum(num1,num2){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let sql1,sql2,m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql1 = num1.toString().split(".")[1].length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }catch(e){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql1 = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql2 = num2.toString().split('.')[1].length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }catch(e){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql2 = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //Math.pow(a,b) 是a的b次方</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m = Math.pow(10,Math.max(sql1,sql2))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return (num1 * m + num2 * m) / m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[oldcode]]></title>
            <link>https://lhhtml5.github.io/blog/December29</link>
            <guid>December29</guid>
            <pubDate>Thu, 29 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //1.单行文本溢出</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    overflow: hidden;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 溢出隐藏</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    text-overflow: ellipsis;&nbsp; &nbsp; &nbsp; // 溢出用省略号显示</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    white-space: nowrap;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 规定段落中的文本不进行换行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //2.多行文本溢出</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    overflow: hidden;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 溢出隐藏</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    text-overflow: ellipsis;&nbsp; &nbsp; &nbsp;// 溢出用省略号显示</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -webkit-line-clamp:3;&nbsp; &nbsp; &nbsp; &nbsp; // 显示的行数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    display:-webkit-box;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 作为弹性伸缩盒子模型显示。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -webkit-box-orient:vertical; // 设置伸缩盒子的子元素排列方式：从上到下垂直排列</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //根据年份计算总周数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function getNumOfWeeks(years){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //设置为这一年开始日期</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var startDateOfYear = new Date(years,0,1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //计算这一年有多少天</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var daysOfYear = ((year % 4 == 0 &amp;&amp; year % 100 !=0) || year % 400 === 0) ? 366 : 365</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //366(365) / 7 = 52.2(52.1),所以一般一年有52周余一天或者两天，当这一年有366天时且第一天是周日，那么最后一天是周一，这一年就是54周</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var weekNum = 53</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //当年份是闰年且第一天是周日时有54周</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (startDateOfYear.getDay() == 0 &amp;&amp; daysOfYear == 366){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            weekNum = 54</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return weekNum</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //根据上周日获取这周日的日期范围</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function getDateRange(lastSunday) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(lastSunday == null || lastSunday == ''){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return "";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var beginDate = new Date(lastSunday.setDate(lastSunday.getDate() + 1))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var endDate = new Date(lastSunday.setDate(lastSunday.getDate() + 6))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return '('+ getNowFormatDate(beginData)+ ')-' + '('+getNowFormatDate(endDate)+')'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //时间转换成字符串</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    function getNowFormatDate(date){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var Month = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var Day = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        var CurrentStr=''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //初始化时间</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Month = date.getMonth() + 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Day = date.getDate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(Month &gt;= 10){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            CurrentStr += Month + '月'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            CurrentStr += '0'+Month +'月'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(Day &gt;= 10){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            CurrentStr += Day + '日'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            CurrentStr += '0' + Day + '日'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return CurrentStr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  let copyList = [] as any</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stationList.value.forEach((item: any) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          copyList.push(item.stationNumber)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const input = document.createElement('input')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        input.value = copyList.toString()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        document.body.appendChild(input)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        input.select()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        document.execCommand('copy')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        document.body.removeChild(input)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ElNotification({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          message: '复制成功',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type: 'success'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //值得研究的代码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      const reader = new FileReader();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      reader.readAsArrayBuffer(this.files); //上传文件的文件信息 file.raw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      reader.onload = function () {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const buffer = reader.result;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const bytes = new Uint8Array(buffer);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const length = bytes.byteLength;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let binary = "";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (let i = 0; i &lt; length; i++) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          binary += String.fromCharCode(bytes[i]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const XLSX = require("xlsx");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const wb = XLSX.read(binary, {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type: "binary",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        self.outdata = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         const arr = [...self.outdata];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // for (let [index, item] of arr.entries()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("姓名")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行姓名不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("性别")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行性别不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("岗位名称")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行岗位名称不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("职位")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行职位不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("JG")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行JG不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("登录名称/用户名")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行用户名不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("密码")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行密码不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("权限/角色")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行权限不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("创建时间")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行创建时间不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("人员状态")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行人员状态不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("工龄 ")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行工龄不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("一级部门")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行一级部门不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("电话")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行电话不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("开户名")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行开户名不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("开户行")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行开户行不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("银行账户")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行银行账户不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("信箱")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行信箱不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("身份证号")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行身份证号不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("紧急联系人")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行紧急联系人不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("紧急联系人电话")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行紧急联系人电话不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //不知道为啥不好使了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                // arr.every((item, index) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   console.log(!item.hasOwnProperty("姓名"), "11111111111111");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("姓名") || !item["姓名"]) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行姓名不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("性别")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行性别不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("岗位名称")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行岗位名称不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("职务")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行职务不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("级别")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行级别不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("登录名称/用户名")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行登录名称/用户名不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("密码")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行密码不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("权限/角色")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行权限/角色不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("创建时间")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行创建时间不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("人员状态")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行人员状态不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("工龄")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行工龄不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("一级部门")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行一级部门不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("电话")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行电话不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("开户名")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行开户名不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("开户行")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行开户行不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("银行账户")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行银行账户不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("信箱")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行信箱不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("身份证号")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行身份证号不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("紧急联系人")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行紧急联系人不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (!item.hasOwnProperty("紧急联系人电话")) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行紧急联系人电话不存在,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   if (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     !Number(item["登录名称/用户名"]) &amp;&amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     !Number(item["员工号"]) &amp;&amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     item["登录名称/用户名"].toUpperCase() !=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       item["员工号"].toUpperCase()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   ) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.isExists = true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     messageSession.message = `您上传文件第${</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //       index + 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     }行登录名称/用户名与员工号不一致,请修改后上传`;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //     return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // });</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//在el-input写入这段代码是校验只能输入数字和不能小于或者大于多少还有小数点后两位</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">oninput="if(isNaN(value)){value = null}{value=value.replace(/[^1-9999999.]/g,'')} if(value.indexOf('.')&gt;0{value=value.slice(0.value.indexOf('.')+3)}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// new关键字</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const isComplexDataType = obj =&gt;(typeof obj === 'object' || typeof obj === 'function') &amp;&amp; obj !== null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const selfNew = function(fn, ...rest){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> let instance = Object.create(fn.prototype)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> let res = fn.apply(instance, rest)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> return isComplexDataType(res) ? res : instance</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现函数call方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const selfCall = function(context, ...args){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let func = this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">context || (context = window)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if(typeof func !== 'function') throw new TypeError('this is no function')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let calls = Symbol('caller')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">context[caller] = func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">let res = context[caller](...args)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">delete context[caller]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">return res</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//手写promise,柯里化,双向绑定原理,防抖节流</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// TS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// readonly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现Readonly,接收一个泛型参数，并返回一个完全一样的类型,只是所有属性都会被readonly所修饰</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type MyReadonly&lt;T&gt; = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    readonly [P in keyof T]:T[P]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">interface Todo {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    title:string;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    description:string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">const todoObj:MyReadonly&lt;Todo&gt;={</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    title:'Hey',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    description:'foobar'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// first-of-array</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现First,他接受一个数组T并返回它的一个元素类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type First&lt;T extends any[]&gt; = T extends [] ? never : T[0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type arr1 = ['a','b','c']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type arr2 = [3,2,1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type head1 = First&lt;arr1&gt; // expected to be 'a'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//IF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//实现一个IF类型，它接收一个条件类型C,一个判断为真时的返回类型T,以及一个判断为假时返回了类型F。C只能是true或者false,T和F可以是任意类型</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type IF&lt;C extends boolean,T,F&gt; = C extends true ? T : F</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type A = IF&lt;true,"a","b"&gt; //expected to be 'a'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type B = IF&lt;false,'a','b'&gt; //expected to be 'b'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//Concat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type Concat&lt;T extends any[],U extends any[]&gt; = [...T, ...U]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ResultConcat = Concat&lt;[1],[2]&gt;//expected to be [1,2]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//Include 实现Array.includes 方法，这个类型接收两个参数，返回的类型要么是true要么是false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type Includes&lt;T extends readonly any[],U&gt; = U extends T[number]?true:false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type isPilarMen = Includes&lt;['Kars','xxx'],'Esidisi'&gt; // expected to be false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现通用的Array.push</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type Push&lt;T extends readonly unknown[],U&gt; = [...T,U]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type Resulted = Push&lt;[1,2],'3'&gt;//[1,2,'3']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// Unshift</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// 实现类型Array.unshift</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type Unshift&lt;T extends readonly unknow[],U&gt; = [U,...T]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type UnshiftList = Unshift&lt;[1,2],0&gt; //[0,1,2]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //如何实现动态适配echarts容器宽高</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const el = ref(null)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const {width,height} = useElementSize(el)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //然后再监听相关变化，适时地调用chart.resize()方法即可：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    watchEffect(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(width.value &amp;&amp; height.value){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            emits('resize',{width:width.value,height:height.value})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            chartRef.value?resize()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//定义一个防抖函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> function debounce(fn,delay){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let timer = null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //返回事件绑定函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return function(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // fn this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let context = this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // fn 参数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let args = arguments</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 清除定时器</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        clearTimeout(timer)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        timer = setTimeout(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            fn.apply(context,args)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },delay)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> function throttle(fn,delay){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let timer = null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return function(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let context = this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let args = arguments</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(!time){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            timer = setTimeout(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                fn(context,args)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                timer = null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },delay)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //保留2位小数不四舍五入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    formatDecimal(num,decimal = 2){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        num = num.toString()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let index = num.indexOf(".")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(index !== -1){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            num = num.substring(0,decimal + index + 1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            num = num.substring(0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return Number(parseFloat(num).toFixed(decimal))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //事件戳转日期</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    formatDate(date){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let date = new Date(date)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let YY = date.getFullYear() + "-"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let MM = date.getMonth()+ 1 &lt; 10? '0' + date.getMonth() + 1 :date.getMonth() + 1 + '-'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let DD = date.getDate() &lt; 10? '0' + date.getDate() : date.getDate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return YY + MM + DD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>css</category>
            <category>January01</category>
        </item>
        <item>
            <title><![CDATA[code]]></title>
            <link>https://lhhtml5.github.io/blog/December23</link>
            <guid>December23</guid>
            <pubDate>Fri, 23 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //后端返回流后可以预览pdf和图片</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        exportPreview(row){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         if(!row.id)return this.$message.warning('请上传文件保存后操作')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       if(row.fileName.includes('.png') || row.fileName.includes('.jpg')) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const imgWindow = window.open("");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            imgWindow &amp;&amp; imgWindow.document.write(`&lt;image src=url style='display: flex; margin: 0 auto'/&gt;`);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       }else if (row.fileName.includes('.pdf') ) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          this.$http</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .get(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          url,{responseType:"blob"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         .then((responseProcess) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          const pdfFile = window.URL.createObjectURL(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            new Blob([responseProcess.data], { type: "application/pdf;base64" })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          window.open(pdfFile + "#toolbar=0");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          URL.revokeObjectURL(pdfFile)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        });</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        this.$message.warning('暂无法预览')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   //element-ui 中的确认框 输入文字信息 $prompt配置项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   this.$prompt('请','提示',{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    confirmButton:'确定',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cancelButtonText:'取消',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    closeOnClickModal:false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputType:'textarea',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputValidator:'',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputErrorMessage:'驳回意见不能为空',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputPlaceholder:'最多输入100个字符',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    inputPattern:/^[\s\S]*.*[^\s][\s\S]*$/,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type:'warning'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }).then(({value})=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     object.xxx = value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     //函数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   }).catch(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    this.$message({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type:'info',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      message:'取消输入'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>周五</category>
            <category>image</category>
            <category>vue2</category>
        </item>
        <item>
            <title><![CDATA[el-table]]></title>
            <link>https://lhhtml5.github.io/blog/December09</link>
            <guid>December09</guid>
            <pubDate>Fri, 09 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    // 有返回值得称作表达式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //el-table 有一个合计功能可以自定义也可以指定属性 在el-table中show-summary :summary-method="getSummaries"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;el-table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        show-summary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :summary-method="getSummaries"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;el-table-column type="selection" width="80" /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;!-- 动态日期 --&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;template v-if=""&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;el-table-column</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            :prop="item.month_value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            :label="item.month_value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            v-for="item in monthList"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            width="150"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;template slot-scope="scope"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    style="display:inline-block;width:75%"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    size="mini"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="scope.row[scope.column.property]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @input="inputChange($event,scope.$index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :readonly="readonly"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="请输入百分比"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;span&gt;%&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-input&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/el-table-column&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/el-table&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//保留小数点后两位补0.00的格式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    toDecimal2(x){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let f = Math.round(x * 100) /100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let s = f.toString()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let rs = s.indexOf('.')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(rs &lt; 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            rs = s.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            s += '.'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while(s.length &lt;= rs + 2){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            s += '0'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//保留两位小数不四舍五入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    formatDecimal(num,decimal){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        num = num.toString()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let index = num.indexOf('.')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(index !== -1) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            num = num.substring(0, decimal + index + 1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            num = num.substring(0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return num</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    getSummaries(param) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let tailTotalList = [] //接收后端返回的参数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const { columns, data } = param</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const sums = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let totalNumber = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let totalPrice = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let inx = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let tailTotal = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        columns.forEach((colum,index,arr) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(index === 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sum[index] = '合计（元）'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(index === 3) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                totalPrice = data.map((item)=&gt;Number(item[column.property]))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(!totalPrice.every((value)=&gt;isNaN(value))){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    sums[index] = totalPrice.reduce((prev,current)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        const value = Number(current)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if(!isNaN(value)){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return prev + current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return prev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    },0)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    sums[index] = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                tailTotal.totalPrice = sums[index]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } else if(index &lt; 4) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sums[index] = '--'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(tailTotalList.length != 0){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            tailTotal.id = tailTotalList[0].id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        projectBudgetBaseList = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        projectBudgetBaseList.push(tailTotal)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return sums</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    computed:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        updateInfo:function(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let self = this;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let bo = false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let i = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            self.item.forEach(function(e){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                bo = bo || e.update;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(e.status &gt; i) i = e.status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(bo) return 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            else return i</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>周五</category>
            <category>table</category>
            <category>vue2</category>
        </item>
        <item>
            <title><![CDATA[sofaraway]]></title>
            <link>https://lhhtml5.github.io/blog/December08</link>
            <guid>December08</guid>
            <pubDate>Thu, 08 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //echarts 配置项 写下来</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //1.  title: 图表的标题</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //2.  legend: 图例</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //3.  graphic: 自定义图像or文本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //4.  toolbox: 右上图标操作</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //5.  visualMap: 视觉映射</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //6.  tooltip: 提示弹框</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //7.  yAxis: y轴</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //8.  xAxis: x轴</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //9.  series: 图标系列</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //10. timeline: 时间轴</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //11. dataZoom: 区域缩放</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-//算法有效括号的问题 codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-//算法有效括号的问题 codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   //输出 true or false example:i: s='{}' o: true  i : s='( ]' o : false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   //method 1 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const isValid = (s) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while(true){ //无限循环</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let len = s.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            s = s.replace('{}', '').replace('[]','').replace('()','')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //输出true的情况为s匹配完后长度为0，</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(s.length === len){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return len === 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //method 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const isValid = (s) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //空字符串符合条件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(!s){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const leftToRight = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            '(':')',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            '[':']',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            '{':'}'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const stack = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (let i = 0, len = s.length; i &lt; len; i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const ch = s[i]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(leftToRight[ch]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                stack.push(ch)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(!stack.length || leftToRight[stack.pop()] !== ch){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return !stack.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>so far away</category>
        </item>
        <item>
            <title><![CDATA[viteoneday]]></title>
            <link>https://lhhtml5.github.io/blog/December07</link>
            <guid>December07</guid>
            <pubDate>Wed, 07 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //使用vite + vue3 命令npm init vue@latest 创建项目</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 组件就是一个对象 类似于构造函数</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">     //Does the file exist?Vue3导入文件失败问题(没有加后缀)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //vue2 使用vuex的写法 example:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //store文件中有modules modules中有demo 那么在demo.js中有</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const state = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        info:{}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const mutations = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        RECEVICE_INFO(state,info){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            state.info = info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const actions = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        getData({commit},value){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //发请求把请求到的数据commit 给mutations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //在组件中可以使用this.$store.dispatch('getData')调用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //使用mapState拿到请求的数据 ...mapState({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //    info:(state)=&gt;state.demo.info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            commit('RECEVICE_INFO',res)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const getters = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    export default {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        state,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        mutations,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        actions,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        getters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[.eleTable]]></title>
            <link>https://lhhtml5.github.io/blog/December06</link>
            <guid>December06</guid>
            <pubDate>Tue, 06 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    去掉element-table的勾选el-checked样式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ::v-deep .el-table__header-wrapper .el-checkbox {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    display: none ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    toDecimal2(x) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var f = parseFloat(x);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if (isNaN(f)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return false;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var f = Math.round(x * 100) / 100;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var s = f.toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      var rs = s.indexOf('.');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if (rs &lt; 0) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rs = s.length;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        s += '.';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      while (s.length &lt;= rs + 2) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        s += '0';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      console.log(s, 'ssssss')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      return s;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[seeDocusaurus]]></title>
            <link>https://lhhtml5.github.io/blog/December05</link>
            <guid>December05</guid>
            <pubDate>Mon, 05 Dec 2022 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">see you again</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">B</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">C</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">//在vue2中有如果列表点击事件在每一项item上 可以使用自定义属性拿到参数进行收集相当于一种原生的事件委派机制 并且这里的高亮显示会用到参考值思想 example:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;ul  click="clickEvent"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> &lt;li&gt; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;span :data-key = "item.id"&gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> &lt;li&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/ul&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> //在script中也就是methods:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clickEvent(event){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const data = event.target.dataset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console.log(data,'data')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden="">还没研究好</div><div role="tabpanel" class="tabItem_Ymn6" hidden="">不用了</div></div></div>vue2 element-ui封装 //publicForm 公共el-form<div class="language-<template> codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-<template> codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;el-form </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :inline="true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :model="ruleForm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :rules="rules"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ref="ruleForm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        label-width="150px"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        class="demo-ruleForm"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        size="mini"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;template v-for="(item,index) in formconfig"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;el-form-item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                v-if="!item.show"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                :label="`${item.label}:`"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                :prop="item.prop"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                :label-width="item.labelWidth"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                :style="{ width: item.formWidth}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'text'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disable="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :placeholder="item.placeholder || ''"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :maxlength="item.maxlength"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :show-word-limit="true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @focus="callback(item,index,$event)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item, index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @clear="clear(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;i</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        v-if="item.icon"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        class="el-input__icon"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :class="{ 'el-icon-edit':item.icon }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :slot="item.event == 'focus' ? 'prefix' : 'suffix'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        @click="handleIconClick(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;&lt;/i&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;template&gt;{{item.slotLabel}}&lt;/template&gt;                    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/i&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-input&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-autocomplete</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'autocomplete'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :placeholder="item.placeholder || '请输入或选择内容'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{width:item.width}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :fetch-suggestions="querySearch"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @focus="setAutocompleteArr(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @select="havedSelect"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-autocomplete&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-input-number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width } || '148px'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'number'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    controls-position="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :step="item.step || 1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :precision="item.precision || 2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :min="item.min || 0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :max="item.max"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-input-number&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'textarea'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    type="textarea"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :rows="item.row"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    autosize</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :maxlength="item.maxlength"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :show-word-limit="true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :placeholder="item.placeholder || ''"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-input&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-select</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'select'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disable="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :placeholder="item.placeholder || '请选择'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width:item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @change="changedata(index,item)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    filterable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :multiple="item.multiple"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :multiple-limit="item.multipleLimit"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :collapse-tags="item.collapseTags"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :allow-create="item.allowCreate"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;el-option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        v-for="i in item.list"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :key="i.value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :label="i.label || i.text || i.name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :value="i.value || i.id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :disabled="i.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;&lt;/el-option&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-select&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;template v-if="item.type == 'selectMonth'"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;el-select</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :style="{ width: item.width || '148px' }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        v-model.trim="formInfo[item.prop][0]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :placeholder="item.placeholder || '请选择'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        size="mini"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        @change="changedata(index,item,'start')"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;el-option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            v-for="i in item.list || formatMonth"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            :key=" i.value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            :label="i.name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            :value="i.value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/el-option&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/el-select&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;label for style="fontsize: 12px;color:#7b7f83"&gt;{{item.go || ''}}&lt;/label&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;el-select </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width || '148px' }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model.trim="formInfo[item.prop][1]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :placeholder="item.placeholder || '请选择'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    size="mini"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @change="changedata(index,item,'end')"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;el-option </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        v-for="i in item.listend || formatMonth"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :key="i.paraCode"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :label="i.paraKey"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :value="i.paraCode"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &gt;&lt;/el-option&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/el-select&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-select</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 v-if="item.type == 'selectYear'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 :placeholder="item.placeholder || '请选择'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 :style=" { width:item.width } "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;el-option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        v-for="i in formatYear"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :key="i.paraCode"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :label="i.paraKey"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        :value="i.paraCode"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;&lt;/el-option&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-select&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-cascader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'cascader'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :options="item.options"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @change="changedata(index,item)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :change-on-select="item.onlySelect"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :show-all-levels="item.levels"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width:item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-cascader&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-radio-group</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'radio'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :placeholder="item.placeholder || ''"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @change="changedata(index,item)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;template v-for="i in item.list"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;el-radio&gt;{{i.label}}&lt;/el-radio&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-radio-group&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-date-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :value-format="'yyyy-MM-dd'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'date'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :type="item.type"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择日期"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-date-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-date-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    value-format="yyyy-MM-dd HH:mm:ss"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'datetime'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :type="item.type"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择日期"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-date-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-date-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    value-format="yyyy-MM-dd"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'daterange'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    range-separator="至"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :type="item.type"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择日期"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handler(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-date-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-date-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    value-format="yyyy-MM-dd HH:mm:ss"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disable="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'datetiemrange'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    range-separator="至"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :type="item.type"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择日期"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style=" { width:item.width } "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;el-date-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-date-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'year'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :type="item.type"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择年"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style=" { width: item.width } "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-date-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-time-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :value-format="item.format || 'HH:mm:ss'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'time'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择时间"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handler(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-time-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-date-picker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    clearable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :disabled="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'month'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align="right"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :type="item.type"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    placeholder="选择月"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    @blur="handleBlur(item,index)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;&lt;/el-date-picker&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;span</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    class="plainText"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v-if="item.type == 'plainText'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &gt;{{ formInfo[item.prop] }}&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;template v-if="item.type == 'selectText'"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;el-select</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            :disable="item.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            v-model="formInfo[item.prop]"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            :placeholder="item.placeholder || '请选择'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            :style="{ width: item.width }"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            @change="changedata(index,item)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            filterable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            allow-create</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            default-first-option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;el-option</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                v-for="i in item.list"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                :key="i.value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                :label="i.label"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                :value="i.value"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                :disable="i.disabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;/el-option&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/el-select&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;/el-form-item&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/el-form&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/template&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export default {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    props:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        formcofig:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //表单配置数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: Array,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        formInfo: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //表单默认显示数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type:Object,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rules: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //表单验证</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: Object,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mounted(){},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    watch:{},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    data(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //input类型伟autocomplete时动态过滤的数组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            restaurants:[],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            formItemIndex: 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    computed: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        formatMonth() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'01',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'一月,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'02',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'二月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'03',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'三月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'04',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'四月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'05',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'五月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'06',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'六月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'07',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'七月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'08',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'八月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'09',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'九月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'10',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'十月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'11',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'十一月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:'12',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:'十二月',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        formatYear(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let dateList = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for(let i = 0; i &lt; 7; i++){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                dateList.push(new Date().getFullYear() + i - 5)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let select = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            dateList.forEach((item)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                const obj = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraCode:item,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    paraKey:item</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                select.push(obj)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return select.reverse()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    methods:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        setAutocompleteArr(val,index){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //动态设定数组</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.restaurants = val.list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.formItemIndex = index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        havedSelect(val){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //默认弹框出现会出现select 下拉触发必填验证</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.$refs.ruleForm.clearValidate(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.formconfig[this.formItemIndex].prop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.$emit('autoCompleteSelected',val)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        querySearch(queryString,cb){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //输入时的过滤方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let restaurants = this.restaurants</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            let results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //调用 callback 返回建议列表的数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cb(results)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        createFilter(queryString){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //自定义过滤</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return (restaurant) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        handleIconClick(item,i){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(this.formconfig[i].icon == true) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(this.formconfig[i].event == 'focus'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    this.formconfig[i].event = ''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    this.formconfig[i].event = 'focus'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.$emit('handleIconClick,{ item, i })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        handleBlur(item,i) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(item.event == 'blur') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.$emit('handleBlur',{ item,i })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        clear(item,index){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(item.event == 'focus'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                for(let p in item) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(this.ruleForm[item[p]]){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        this.ruleForm[item[p]] = ''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.$emit('clear',{item,index})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        callback(item,index,e){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if(item.event == 'focus'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                e.target.blur()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.$emit('callback',{ item, index})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        buttonEvent(item) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.$emit('buttonEvent', item)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        changedata(ind,item,state){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if((item.type == 'selectMonth' || item.type == 'select' || item.type == 'radio' || item.type == 'cascader') &amp;&amp; item.event == 'change') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                this.$emit('selectChange', { item, ind, state })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //直接保存可以调用这个组件的实例，写保存需要接收saveForm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        submitForm(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.$refs.ruleForm.validate((valid)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if(valid) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    this.$emit('saveForm',this.ruleForm)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        resetForm() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            //重置表格数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            this.$refs.ruleForm.resetFields()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;style scoped&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.el-input .el-input__inner{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    border-radius:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.el-input{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    width:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.el-input.is-disabled .el-input__inner {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    background-color: #f5f7fa;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.el-form--inline .el-form-item {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    margin -right: 0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">i.el-input__icon.el-icon-edit{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    color:rgba(255,163,82,1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cursor: pointer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    font-size: 16px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">i.el-input__icon {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    height: auto;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.plainText {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    display: inline-block;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    font-weight: 900;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/style&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// 组件调用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;public-form</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :formconfig="formconfig"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :formInfo="formInfo"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        :rules="rulesAdd"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        @selectChange="selectChange"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        @handleBlur="handleBlur"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &gt;&lt;/public-form&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        export default {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            name:'',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            props:{},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            data(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    formconfig:[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            label:'',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            prop:'',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            type:'select',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            value:'',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            disable:false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            labelWidth:'',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            list:,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            event:'change' //此处change事件  为这个selectChange(item)传递参数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      &lt;/script&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[十二月03]]></title>
            <link>https://lhhtml5.github.io/blog/December03</link>
            <guid>December03</guid>
            <pubDate>Sat, 03 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[服务器为多端服务Rest 返回json数据]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="服务器为多端服务rest-返回json数据">服务器为多端服务Rest 返回json数据<a class="hash-link" href="#服务器为多端服务rest-返回json数据" title="标题的直接链接">​</a></h2><p>mvvm 模型 视图 视图模型
vm是创建实例的
npm init -y  npm i vite -D npm i vue</p>]]></content:encoded>
            <category>笔记</category>
            <category>vite</category>
            <category>study</category>
        </item>
        <item>
            <title><![CDATA[十二月第一天]]></title>
            <link>https://lhhtml5.github.io/blog/December01</link>
            <guid>December01</guid>
            <pubDate>Thu, 01 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[element-ui]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="element-ui">element-ui<a class="hash-link" href="#element-ui" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    // vue 城市选择器的使用 element-china-area-data </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 按装 npm install element-china-area-data -S</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nvm">nvm<a class="hash-link" href="#nvm" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    // nvm node任意版本切换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // nvm 下载地址 https://github.com/coreybutler/nvm-windows/releases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nvm list  -查看node版本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nvm install -安装指定版本的node</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    配置nvm的镜像服务器 nvm node_mirror https://npmmirror.com/mirrors/node/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nvm install lts -安装稳定版</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nvm use xxx 指定要使用的node版本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    */</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="code">code<a class="hash-link" href="#code" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    Date.prototype.toLocalString = function () {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let month = this.getMonth() + 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let _month = month &lt; 10? '0' + month : month</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let today = this.getDate() &lt; 10 ? '0' + this.getDate() : this.getDate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return this,getFullYear() + '/' +_month + '/' + today</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Date.prototype.toLocalString = function () {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let month = this,getMonth + 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let _month = month &lt; 10? '0' + this.getDate() : this.getDate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let today = this.getDate() &lt; 10? '0' + this.getDate() : this.getDate()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let h = this.getHours() &lt; 10? '0' + this.getHours() : this.getHours()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let m = this.getMinutes() &lt; 10? '0' + this.getMinutes() : this.getMinutes()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        let s = this.getSeconds() &lt; 10? '0' + this.getSeconds() : this.getSeconds()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return this.getFullYear() + '-' + _month + '-' + today+' ' + h + ':' + m + ':'+ s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>笔记</category>
            <category>element-ui</category>
            <category>西州月，夜夜照人明</category>
        </item>
        <item>
            <title><![CDATA[one day]]></title>
            <link>https://lhhtml5.github.io/blog/November30</link>
            <guid>November30</guid>
            <pubDate>Wed, 30 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Base64 study]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="base64-study">Base64 study<a class="hash-link" href="#base64-study" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    function getBase64(file:any){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new Promise((resolve,reject)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // FileReader类就是用来读文件的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const reader = new FileReader()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 开始读文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // readAsDataURL: dataurl它的本质就是图片的二进制数据，进行base64加密后形成的一个字符串</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            reader.readAsDataURL(file)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 成功和失败返回对应的信息， reader.result一个base64,可以直接使用</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            reader.onload = () =&gt; resolve(reader.result)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 失败返回失败的信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            reader.onerror = (error) =&gt;reject(error)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    //tsx封装一个可拖拽的左中右布局 flex 的 三个参数：flex-grow、flex-shrink、flex-basis</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   import {defineComponent,ref,onMounted,nextTick,reactive,computed} from 'vue'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   import { useStore } from 'vuex'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   export default defineComponent({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name: 'ResizeCom',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    props:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        leftWidth:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: 260,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: Number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rightWidth: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: 250,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type:Number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        leftClass: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: '',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: String</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        centerClass: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: '',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: String</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rightClass: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: '',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: String</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        leftStyle: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: '',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type:String</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        bg: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            default: false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            type: Boolean</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    emits:['update:leftWidth','update:rightWidth'],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    setup(props, { slots }){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const store = useStore()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const rw = ref(JSON.parse(JSON.stringify(props.rightWidth)))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const doResize = (line:string,box:string):void =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const lineDom: any = document.querySelector(line)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const boxDom: any = document.querySelector(box)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (!boxDom) return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lineDom.onmousedown = (e:any):boolean =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                const start = e.clientX</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                const itemWidth = boxDom.clientWidth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                document.onmousemove = (even:any):void =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    const end = even.clientX</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(box === '.resize-left-box') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        fold['leftWidth'] = end - start + itemWidth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(box === '.resizeBox-right') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        rw.value = itemWidth + (start - end)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    //这个应该是画布的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if(store.state.experiment.expGraph) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        store.state.experiment.expGraph.resizeGraph()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                document.onmouseup = ():void =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    document.onmousemove = null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    document.onmouseup = null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if (lineDom.releaseCapture){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        lineDom.releaseCapture()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    if (lineDom.setCapture) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        lineDom.setCapture()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const resetWidth = () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            doResize('.left', '.resize-left-box')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            doResize('.right-line', '.resizeBox-right')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 判断是否有收回的left</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const isExpand = computed(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const notExpand = Object.keys(expandObj).filter((item:any)=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return !expandObj[item]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return !!notExpand.length</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const expandObj: any = reactive({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            expand:true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const fold: any = reactive({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            leftWidth: ref(JSON.parse(JSON.stringify(props.leftWidth))),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            left1Width: ref(JSON.parse(JSON.stringify(props.leftWidth)))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        const exPandEvent = (v:boolean) =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            expandObj['leftWidth'] = v ? props.leftWidth: 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            expandObj['expand'] = v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        onMounted(()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            expandObj['expand'] = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            nextTick(resetWidth)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;div class="resizeBox"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;div class="expand-box" v-show={isExpand.value}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;div v-show={!expandObj.expand} class="expandBtn" style={{top:0}} onClick={()=&gt;{exPandEvent(true)}}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;div class="top-triangle"&gt;&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;div class="text"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;span&gt;{props.leftTitle}&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;span class="m-t-5 el-icon-d-arrow-right"&gt;&lt;/span&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;div class="bottom-triangle"&gt;&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;div class="resize-left-common resize-left-box" style={{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        flex:`0 0 ${expandObj['expand'] ? fold['leftWidth']: 0} px`,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        marginLeft:!expandObj['expand'] || !isExpand.value ? 0 : '10px'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;div v-show={expandObj['expand']} class={['leftContent', props.bg? 'backg': 'default']}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;div class="custom-tree-box default-tree-box" style={{height: '100%',overflow:'auto'}}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                {slots.left ? slots.left(): ''}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;div v-show={expandObj['expand']} class="left-line left"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;div class={['resizeBox-center',props.centerClass]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        style={props.centerStyle}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        {slots.center ? slots.center() : ''}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        slots.right ? (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;div class="resizeBox-right"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                {slots.right()}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;div class="right-line" /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        ):('')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    .resizeBox {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        width: 100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        height: 100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        display: flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expand-box {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            height: 100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            position: relative;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            flex: 0 0 48px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .resizeBox-right {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            position:relative;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .resize-left-common,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .resizeBox-right{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            overflow: hidden;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .left-line,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .right-line {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                width:0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                height: 98%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                position:absolute;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                top:50%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                transform:translateY(-50%);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                z-index:10;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                cursor:col-resize;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-left:1px solid transparent;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-right:1px solid transparent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .left-line {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                right:0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .right-line{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                left:0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .expandBtn{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            width: 38px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            text-align:center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cursor:pointer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            position:absolute;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            top:20px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            left:0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            background:transparent;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            z-index:1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .top-triangle{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                width:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                height:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-top:24px solid transparent;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-right: 38px solid transparent;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-bottom:24px solid rgb(49,137,203);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .text {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                background:rgb(49,137,203);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                color:#fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                flex-direction:column;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                align-items:center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                //writing-mode 属性定义了文本在水平或垂直方向上如何排布。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                //vertical-lr：垂直方向内内容从上到下，水平方向从左到右</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                span {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    writing-mode:vertical-lr;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .bottom-triangle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                width:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                height:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-top:24px solid rgb(49,137,203);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-right:38px solid transparent;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border-bottom:24px solid transparent;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .resize-left-common{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            position:relative;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .leftContent{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                width:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                height:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                flex-direction:column;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                overflow:hidden;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                border:1px solid #e5e5e5;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .head{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align-items:center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    justify-content:space-between;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    .icon{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        cursor:pointer;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    padding:0 20px 0 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &amp;.default{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    .head{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        height: 36px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        border-bottom: #e5e5e5 1px solid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .trapezoid {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            height: 100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            width: 100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            overflow:hidden;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .head-title{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                height:36px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                background-color:rgba(49,137,203,1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                align-items:center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                padding:0 20px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                width:fit-content;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                font-weight:500</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                font-size:18px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                color:#fff</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            .triangle{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                width:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                height:0px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                border-top:36px solid rgba(49,137,203,1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                border-right:18px solid #fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &amp;.backg {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    background:rgb(49,137,203) url('');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    .head{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        height:54px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        color:#fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        padding:0 20px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        .head-title{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            border-left:4px solid #fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            padding-left:5px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            font-size:18px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .default-tree-box{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    height: 100%</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .resizeBox-right{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            margin:10px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            margin-left:0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .resizeBox-center{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            width:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            overflow:hidden;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            margin:10px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .nest-resize-box{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            margin:0 0 0  10px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>笔记</category>
            <category>灼灼其华</category>
        </item>
        <item>
            <title><![CDATA[cancanFailureCase]]></title>
            <link>https://lhhtml5.github.io/blog/November29</link>
            <guid>November29</guid>
            <pubDate>Tue, 29 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[2种a链接下载 第一种传递参数为res,文件名,contentType]]></description>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">download:(content:string,fileName:string,contentType='application/octet-stream')=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const a = document.createElement('a')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const file = new Blob([content],{type:contentType})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a.href = URL.createObjectURL(file)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a.download = fileName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a.click()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    URL.revokeObjectURL(a.href)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">const downloadFile=function(path,name){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const xhr = new XMLHttpRequest()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.open('get',path)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.responseType = 'blob'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.send()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.onload = function () {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(this.status === 200 || this.status === 304){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // 如果是IE10及以上，不支持download属性，采用msSaveOrOpenBlob方法，但是IE10以下也不支持msSaveOrOpenBlob</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if('msSaveOrOpenBlob' in navigator) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                navigator.msSaveOrOpenBlob(this.response,name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // const blob = new Blob([this.response],{type:xhr.getResponseHeader('Content-Type')})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // const url = URL.createObjectURL(blob)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const url = URL.createObjectURL(this.response)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const a = document.createElement('a')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            a.style.display = 'none'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            a.href = url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            a.download = name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            document.body.appendChild(a)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            a.click()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            document.body.removeChild(a)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            URL.revokeObjectURL(url)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    window.open(url)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //伪代码写写原生ajax请求</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let xhr = new XMLHttpRequest()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //如果是get请求不用设置请求头</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.open('get',url)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //如果是post请求</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //xhr.open('post',url)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //xhr.setRequestHeader('Content-Type','application/www-form-urlencoded')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.send()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xhr.onreadstatechange=function(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(xhr.readstate === 4 &amp;&amp; xhr.state === 200){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            const res = xhr.response.xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2种a链接下载 第一种传递参数为res,文件名,contentType
第二种传递参数为url,文件名 自我认为但是注释部分可以替代第一种写法</p><ul><li>vue3tsx写法公共组件封装写法</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    import { defineComponent } from 'vue';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    export default defineComponent({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name:'commonCard',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        props:{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            title: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:String,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            customBodyStyle: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type:Object,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default:() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    return {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            showTitle: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                type: Boolean,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                default: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        setup(props, { slots }) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;div class="box-container"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;div class="box-header v-show={props.showTitle}"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                          slots.title ? (slots.title()):(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;div class="title"&gt;{props.title}&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;div class="second-title"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    {slots.secondTitle &amp;&amp; slots.secondTitle()}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                          )}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;div class="box-body" style={props.customBodyStyle}&gt;        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            {slots.body &amp;&amp; slots.body()}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        &lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    .box-container{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        width:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        height:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        border-radius:16px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        overflow:hidden;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        flex-direction:column;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        box-shadow:0px 0px 8px 0px rgba(0,0,0,0.16),inset 0px 1px 35px 0px #fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        border: 1px solid #fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .box-header {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            height: 50px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            line-height: 50px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            padding: 0 20px 0 30px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            flex-shrink: 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            display: flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            flex-wrap:nowrap;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            justify-content: space-between;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            overflow: hidden;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            border-bottom: 1px solid #fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            background:#fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .box-title {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                margin-left:-1px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                margin-top:-1px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .title {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                align-items:center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                font-size:24px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                color:#000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .title:before {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    content: '';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    width: 5px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    height: 20px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    background-color:#004892;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    border-radius: 3px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    margin-right: 10px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            .box-button {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                height: 100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                align-items: center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                .buttons {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    display:flex;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    align-items:center;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        .box-body {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            flex:1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            width:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            height:100%;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            overflow:auto;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            padding:10px 20px 20px 20px;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            background:#fff;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>vue3tsx写法组件使用 example</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    return () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;el-row&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;el-col&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    &lt;commonCard title="xxx" style="width:100px;height:100%" v-slots={{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        body:()=&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            return(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                &lt;div&gt;&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }} /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;/el-col&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            &lt;el-row&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;commonCard style="width:100%;height:100%" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    v-slots={{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        title:() =&gt;{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;div&gt;&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        body: () =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                &lt;div&gt;&lt;/div&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }} /&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>笔记</category>
        </item>
        <item>
            <title><![CDATA[Weather]]></title>
            <link>https://lhhtml5.github.io/blog/happy</link>
            <guid>happy</guid>
            <pubDate>Mon, 28 Nov 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[-今天我好高兴]]></description>
            <content:encoded><![CDATA[<p>-今天我好高兴
今天天气真不错
slug：访问路径
title：标题
image_url：图片地址
url:地址  <br>
clone function <br></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function copyAddObj(oldObj){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let newObj = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for(let key in oldObj){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        newObj[key] = oldObj[key]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newObj.add = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newObj.update = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newObj.delete = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newObj.check = false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return newObj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function deepCloneObj(oldObj){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    let newObj = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for (let key in oldObj){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(typeof oldObj[key] === 'Array' || typeof oldObj[key] === 'Object){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            newObj[key] = deepCloneObj(oldObj[key])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }else{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            newObj[key] = oldObj[key]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return newObj</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>笔记</category>
            <category>随笔</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://lhhtml5.github.io/blog/welcome</link>
            <guid>welcome</guid>
            <pubDate>Thu, 26 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus blogging features are powered by the blog plugin.]]></description>
            <content:encoded><![CDATA[<p><a href="https://docusaurus.io/docs/blog" target="_blank" rel="noopener noreferrer">Docusaurus blogging features</a> are powered by the <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog" target="_blank" rel="noopener noreferrer">blog plugin</a>.</p><p>Simply add Markdown files (or folders) to the <code>blog</code> directory.</p><p>Regular blog authors can be added to <code>authors.yml</code>.</p><p>The blog post date can be extracted from filenames, such as:</p><ul><li><code>2019-05-30-welcome.md</code></li><li><code>2019-05-30-welcome/index.md</code></li></ul><p>A blog post folder can be convenient to co-locate blog post images:</p><p><img loading="lazy" alt="Docusaurus Plushie" src="/assets/images/docusaurus-plushie-banner-a60f7593abca1e3eef26a9afa244e4fb.jpeg" width="1500" height="500" class="img_ev3q"></p><p>The blog supports tags as well!</p><p><strong>And if you don't want a blog</strong>: just delete this directory, and use <code>blog: false</code> in your Docusaurus config.</p>]]></content:encoded>
            <category>facebook</category>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>